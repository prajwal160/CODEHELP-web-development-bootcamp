.container{
    width:100%;
    height:215px;
    background-color: yellow;
    border:2px solid red;
}

.box{
    height:212px;
    width:212px;
    border:2px solid green;
    background-color: aqua;

    animation-name: babbar;
    animation-duration: 7s;
    animation-iteration-count: 2;
    animation-timing-function:  ease;
    /* animation-delay: 1s; */
/* animation-direction: alternate;   different directions the animation moves*/
    /* animation-fill-mode:backwards; */
}    

@keyframes babbar {
    0%{
        width:212px;
        background-color: orange;
    }

    50%{
        width:35%;
        background-color: white;
    }
    100%{
        width:100%;
        background-color: green;
    }
}


/* @keyframes babbar{
    from {
        width:212px;
    }

    to{
        width:100%;
    }
    
} */



/* EXTRA */
/* Certainly! Let's explore the different possibilities for each of the animation properties:

  01)animation-direction: 
normal: The animation plays forwards from the beginning to the end on each iteration. This is the default value.
reverse: The animation plays backwards from the end to the beginning on each iteration.
alternate: The animation plays forwards on odd iterations and backwards on even iterations, creating a ping-pong effect.
alternate-reverse: Similar to alternate, but the animation starts backwards and alternates direction on subsequent iterations.


02) animation-fill-mode: 
none: No styles are applied to the element before or after the animation.
forwards: The styles defined in the keyframe at the end of the animation (100% or to) are applied to the element after the animation ends.
backwards: The styles defined in the keyframe at the start of the animation (0% or from) are applied to the element before the animation begins.
both: Both the forwards and backwards behaviors are applied, meaning the element retains styles from both the start and end of the animation.
 */